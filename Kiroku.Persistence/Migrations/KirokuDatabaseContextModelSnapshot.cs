// <auto-generated />
using System;
using System.Text.Json;
using Kiroku.Persistence;
using Kiroku.Persistence.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft.Extensions.Logging;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kiroku.Persistence.Migrations
{
    [DbContext(typeof(KirokuDatabaseContext))]
    partial class KirokuDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "log_level", new[] { "trace", "debug", "information", "warning", "error", "critical", "none" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kiroku.Persistence.Entities.Log", b =>
                {
                    b.Property<JsonDocument>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("data");

                    b.Property<string>("EventCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("event_code");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("InstanceId")
                        .HasColumnType("text")
                        .HasColumnName("instance_id");

                    b.Property<LogLevel>("Level")
                        .HasColumnType("log_level")
                        .HasColumnName("level");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time");

                    b.HasIndex("EventCode");

                    b.HasIndex("Level");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Time");

                    b.ToTable("logs");
                });
#pragma warning restore 612, 618
        }
    }
}
